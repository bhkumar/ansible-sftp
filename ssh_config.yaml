- hosts: localhost
  become: yes
  become_user: root
  vars:
    ssh_config: /etc/ssh/sshd_config
    allowUsers: user1 user2
  tasks:
  - name: SFTP-Server | Alter Root login
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: '^PermitRootLogin(\s+)'
      line: "PermitRootLogin no"
      state: present
  - blockinfile:
      path: "{{ ssh_config }}"
      insertafter: '^Port(\s+)22'
      marker_begin: ""
      marker_end: ""
      block: |
        # Address family should always be limited to the active network configuration.
        AddressFamily inet
  - name: Listen to all addresses
    replace:
      path: "{{ ssh_config }}"
      regexp: '^#ListenAddress(\s+)(\d.\d.\d.\d)'
      replace: 'ListenAddress 0.0.0.0'
  - name: Capture failed login
    replace:
      path: "{{ ssh_config }}"
      regexp: '^LogLevel(\s+)INFO'
      replace: 'LogLevel VERBOSE'
  - blockinfile:
      path: "{{ ssh_config }}"
      insertafter: '^LoginGraceTime(\s+)120'
      marker_begin: ""
      marker_end: ""
      block: |

        # Cryptography
        # ------------

        # **Ciphers** -- If your clients don't support CTR (eg older versions), cbc will be added
        # CBC: is true if you want to connect with OpenSSL-base libraries
        # eg ruby Net::SSH::Transport::CipherFactory requires cbc-versions of the given openssh ciphers to work
        # -- see: (http://net-ssh.github.com/net-ssh/classes/Net/SSH/Transport/CipherFactory.html)
        #

        Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

        # **Hash algorithms** -- Make sure not to use SHA1 for hashing, unless it is really necessary.
        # Weak HMAC is sometimes required if older package versions are used
        # eg Ruby's Net::SSH at around 2.2.* doesn't support sha2 for hmac, so this will have to be set true in this case.
        #

        MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256

        # Alternative setting, if OpenSSH version is below v5.9
        #MACs hmac-ripemd160

        # **Key Exchange Algorithms** -- Make sure not to use SHA1 for kex, unless it is really necessary
        # Weak kex is sometimes required if older package versions are used
        # eg ruby's Net::SSH at around 2.2.* doesn't support sha2 for kex, so this will have to be set true in this case.
        # based on: https://bettercrypto.org/static/applied-crypto-hardening.pdf

        KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256

        # Authentication
        # --------------

        # Secure Login directives.

        LoginGraceTime 30s
        MaxAuthTries 22
        MaxSessions 10
        MaxStartups 10:30:100
  - name: Remove duplicate line of LoginGradeTime
    lineinfile:
      path: "{{ ssh_config }}"
      regexp: '^LoginGraceTime(\s+)120'
      state: absent
  - name: Uncomment IgnoreUserKnownHosts
    replace:
      path: "{{ ssh_config }}"
      regexp: '^#IgnoreUserKnownHosts(\s+)yes'
      replace: 'IgnoreUserKnownHosts yes'
  - name: Enable password authentication
    replace:
      path: "{{ ssh_config }}"
      regexp: ^(#PasswordAuthentication|PasswordAuthentication)(\s+)(yes|no)
      replace: 'PasswordAuthentication yes'
  - name: Disable kerberos authentication
    replace:
      path: "{{ ssh_config }}"
      regexp: '^(#KerberosAuthentication|KerberosAuthentication)(\s+)(yes|no)'
      replace: 'KerberosAuthentication no'
  - name: Disable kerberos password
    replace:
      path: "{{ ssh_config }}"
      regexp: '^(#KerberosOrLocalPasswd|KerberosOrLocalPasswd)(\s+)(yes|no)'
      replace: 'KerberosOrLocalPasswd no'
  - name: Enable kerberos ticket
    replace:
      path: "{{ ssh_config }}"
      regexp: '^(#KerberosTicketCleanup|KerberosTicketCleanup)(\s+)(yes|no)'
      replace: 'KerberosTicketCleanup yes'
  - name: Disable GSSAPI authentication
    replace:
      path: "{{ ssh_config }}"
      regexp: '^(#GSSAPIAuthentication|GSSAPIAuthentication)(\s+)(yes|no)'
      replace: 'GSSAPIAuthentication no'
  - name: Enable GSSAPICleanupCredentials
    replace:
      path: "{{ ssh_config }}"
      regexp: '^(#GSSAPICleanupCredentials|GSSAPICleanupCredentials)(\s+)(yes|no)'
      replace: 'GSSAPICleanupCredentials yes'
  - name: Allow users to ssh
    blockinfile:
      path: "{{ ssh_config }}"
      insertafter: '^(#GSSAPICleanupCredentials|GSSAPICleanupCredentials)(\s+)(yes|no)'
      marker_begin: ""
      marker_end: ""
      block: |

        # In case you don't use PAM (`UsePAM no`), you can alternatively restrict users and groups here. For key-based authentication this is not necessary, since all keys must be explicitely enabled.

        AllowUsers {{ allowUsers }}
  - name: Disable TCPKeepAlive
    replace:
      path: "{{ ssh_config }}"
      regexp: '^(#TCPKeepAlive|TCPKeepAlive)(\s+)(yes|no)'
      replace: 'TCPKeepAlive no'
  - name: Add Network settings
    blockinfile:
      path: "{{ ssh_config }}"
      insertafter: '^(#TCPKeepAlive|TCPKeepAlive)(\s+)(yes|no)'
      marker_begin: ""
      marker_end: ""
      block: |

        # Manage `ClientAlive..` signals via interval and maximum count. This will periodically check up to a `..CountMax` number of times within `..Interval` timeframe, and abort the connection once these fail.
        ClientAliveInterval 300
        ClientAliveCountMax 3

        # Disable tunneling
        PermitTunnel no

        # Disable forwarding tcp connections.
        # no real advantage without denied shell access
        AllowTcpForwarding no
        # Disable agent formwarding, since local agent could be accessed through forwarded connection.
        # no real advantage without denied shell access
        AllowAgentForwarding no

        # Do not allow remote port forwardings to bind to non-loopback addresses.
        GatewayPorts no
  - name: Disable X11Forwarding
    replace:
      path: "{{ ssh_config }}"
      regexp: '^(#X11Forwarding|X11Forwarding)(\s+)(yes|no)'
      replace: 'X11Forwarding no'
  - name: Add X11UseLocalhost
    lineinfile:
      dest: "{{ ssh_config }}"
      regexp: '^(#X11Forwarding|X11Forwarding)(\s+)(yes|no)'
      insertafter: '^(#X11Forwarding|X11Forwarding)(\s+)(yes|no)'
      line: "X11UseLocalhost no"
      state: present
  - name: Disable PrintMotd
    replace:
      path: "{{ ssh_config }}"
      regexp: '^(#PrintMotd|PrintMotd)(\s+)(yes|no)'
      replace: 'PrintMotd no'
  - name: Disable PrintLastLog
    replace:
      path: "{{ ssh_config }}"
      regexp: '^(#PrintLastLog|PrintLastLog)(\s+)(yes|no)'
      replace: 'PrintLastLog no'
  - name: Add env config and misc configuration
    blockinfile:
      path: "{{ ssh_config }}"
      insertafter: 'X11UseLocalhost yes'
      marker_begin: ""
      marker_end: ""
      block: |

          # User environment configuration
          # ==============================

          PermitUserEnvironment no

          # Misc. configuration
          # ===================

          Compression no

          UseDNS no

          PrintMotd no

          PrintLastLog no

          Banner /etc/ssh/banner.txt

          DebianBanner no

          # Reject keys that are explicitly blacklisted
          # RevokedKeys /etc/ssh/revoked_keys
